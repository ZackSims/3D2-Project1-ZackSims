#include <Adafruit_NeoPixel.h>


#define LED_PIN    6

// How many NeoPixels are attached to the Arduino?
#define LED_COUNT 2


Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);



void setup() {
  strip.begin();          
  strip.show();            
  strip.setBrightness(195); // Set BRIGHTNESS to about 1/5 (max = 255)
  
}



void loop() {
uint32_t magenta = strip.Color(255, 0, 255);
uint32_t blue = strip.Color(0, 0, 255);
int pause = 1000;
 

}
void colorWipe(uint32_t color, int wait) {
  for(int i=0; i<strip.numPixels(); i++) { 
    strip.setPixelColor(i, color);        
    strip.show();                         
    delay(wait);                         
  }
}


void theaterChase(uint32_t color, int wait) {
  for(int a=0; a<10; a++) {  // Repeat 10 times... (
    for(int b=0; b<3; b++) { //  'b' counts from 0 to 2...(CYCLING RGB)
      strip.clear();         //   Set all pixels in RAM to 0 (off)
      // 'c' counts up from 'b' to end of strip in steps of 3...
      for(int c=b; c<strip.numPixels(); c += 3) {
        strip.setPixelColor(c, color); // Set pixel 'c' to value 'color'
      }
      strip.show(); // Update strip with new contents
      delay(wait);  // Pause for a moment
    }
  }
}

void rainbow(int wait) {
  
  for(long firstPixelHue = 0; firstPixelHue < 5*65536; firstPixelHue += 256) {
    for(int i=0; i<strip.numPixels(); i++) { // For each pixel in strip...
    
      int pixelHue = firstPixelHue + (i * 65536L / strip.numPixels());
   
      strip.setPixelColor(i, strip.gamma32(strip.ColorHSV(pixelHue)));
    }
    strip.show(); 
    delay(wait); 
  }
}

void theaterChaseRainbow(int wait) {
  int firstPixelHue = 0;    
  for(int a=0; a<30; a++) {  
    for(int b=0; b<3; b++) { 
      strip.clear();        
      
      for(int c=b; c<strip.numPixels(); c += 3) {
  
        int      hue   = firstPixelHue + c * 65536L / strip.numPixels();
        uint32_t color = strip.gamma32(strip.ColorHSV(hue)); // hue -> RGB
        strip.setPixelColor(c, color); 
      }
      strip.show();                
      delay(wait);                 
      firstPixelHue += 65536 / 90; 
    }
  }
}


